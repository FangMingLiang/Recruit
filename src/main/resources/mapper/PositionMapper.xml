<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingliang.recruit.mapper.PositionMapper" >
  <resultMap id="BaseResultMap" type="com.mingliang.recruit.model.Position" >
    <id column="positionId" property="positionid" jdbcType="INTEGER" />
    <result column="CompanyId" property="companyid" jdbcType="VARCHAR" />
    <result column="positionType" property="positiontype" jdbcType="VARCHAR" />
    <result column="positionName" property="positionname" jdbcType="VARCHAR" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <result column="jobNature" property="jobnature" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="VARCHAR" />
    <result column="workAddress1" property="workaddress1" jdbcType="VARCHAR" />
    <result column="experience" property="experience" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="positionAdvantage" property="positionadvantage" jdbcType="VARCHAR" />
    <result column="positionAddress" property="positionaddress" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mingliang.recruit.model.Position" extends="BaseResultMap" >
    <result column="positionDetail" property="positiondetail" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    positionId, CompanyId, positionType, positionName, department, jobNature, salary, 
    workAddress1, experience, education, positionAdvantage, positionAddress, sign, createDate
  </sql>
  <sql id="Blob_Column_List" >
    positionDetail
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from companyposition
    where positionId = #{positionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from companyposition
    where positionId = #{positionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingliang.recruit.model.Position" >
    insert into companyposition (positionId, CompanyId, positionType, 
      positionName, department, jobNature, 
      salary, workAddress1, experience, 
      education, positionAdvantage, positionAddress, 
      sign, createDate, positionDetail
      )
    values (#{positionid,jdbcType=INTEGER}, #{companyid,jdbcType=VARCHAR}, #{positiontype,jdbcType=VARCHAR}, 
      #{positionname,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{jobnature,jdbcType=VARCHAR}, 
      #{salary,jdbcType=VARCHAR}, #{workaddress1,jdbcType=VARCHAR}, #{experience,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{positionadvantage,jdbcType=VARCHAR}, #{positionaddress,jdbcType=VARCHAR}, 
      #{sign,jdbcType=VARCHAR}, #{createdate,jdbcType=VARCHAR}, #{positiondetail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mingliang.recruit.model.Position" >
    insert into companyposition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="positionid != null" >
        positionId,
      </if>
      <if test="companyid != null" >
        CompanyId,
      </if>
      <if test="positiontype != null" >
        positionType,
      </if>
      <if test="positionname != null" >
        positionName,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="jobnature != null" >
        jobNature,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="workaddress1 != null" >
        workAddress1,
      </if>
      <if test="experience != null" >
        experience,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="positionadvantage != null" >
        positionAdvantage,
      </if>
      <if test="positionaddress != null" >
        positionAddress,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="positiondetail != null" >
        positionDetail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="positionid != null" >
        #{positionid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="positiontype != null" >
        #{positiontype,jdbcType=VARCHAR},
      </if>
      <if test="positionname != null" >
        #{positionname,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="jobnature != null" >
        #{jobnature,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="workaddress1 != null" >
        #{workaddress1,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="positionadvantage != null" >
        #{positionadvantage,jdbcType=VARCHAR},
      </if>
      <if test="positionaddress != null" >
        #{positionaddress,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="positiondetail != null" >
        #{positiondetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingliang.recruit.model.Position" >
    update companyposition
    <set >
      <if test="companyid != null" >
        CompanyId = #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="positiontype != null" >
        positionType = #{positiontype,jdbcType=VARCHAR},
      </if>
      <if test="positionname != null" >
        positionName = #{positionname,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="jobnature != null" >
        jobNature = #{jobnature,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="workaddress1 != null" >
        workAddress1 = #{workaddress1,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="positionadvantage != null" >
        positionAdvantage = #{positionadvantage,jdbcType=VARCHAR},
      </if>
      <if test="positionaddress != null" >
        positionAddress = #{positionaddress,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="positiondetail != null" >
        positionDetail = #{positiondetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where positionId = #{positionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mingliang.recruit.model.Position" >
    update companyposition
    set CompanyId = #{companyid,jdbcType=VARCHAR},
      positionType = #{positiontype,jdbcType=VARCHAR},
      positionName = #{positionname,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      jobNature = #{jobnature,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=VARCHAR},
      workAddress1 = #{workaddress1,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      positionAdvantage = #{positionadvantage,jdbcType=VARCHAR},
      positionAddress = #{positionaddress,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=VARCHAR},
      positionDetail = #{positiondetail,jdbcType=LONGVARCHAR}
    where positionId = #{positionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingliang.recruit.model.Position" >
    update companyposition
    set CompanyId = #{companyid,jdbcType=VARCHAR},
      positionType = #{positiontype,jdbcType=VARCHAR},
      positionName = #{positionname,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      jobNature = #{jobnature,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=VARCHAR},
      workAddress1 = #{workaddress1,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      positionAdvantage = #{positionadvantage,jdbcType=VARCHAR},
      positionAddress = #{positionaddress,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=VARCHAR}
    where positionId = #{positionid,jdbcType=INTEGER}
  </update>
  <resultMap id="positionList" type="com.mingliang.recruit.model.Position">
    <id property="positionid" column="positionId"/>
    <result property="companyid" column="CompanyId"/>
    <result property="positiontype" column="positionType"/>
    <result property="positionname" column="positionName"/>
    <result property="department" column="department"/>
    <result property="jobnature" column="jobNature"/>
    <result property="salary" column="salary"/>
    <result property="workaddress1" column="workAddress1"/>
    <result property="experience" column="experience"/>
    <result property="education" column="education"/>
    <result property="positionadvantage" column="positionAdvantage"/>
    <result property="positiondetail" column="positionDetail"/>
    <result property="positionaddress" column="positionAddress"/>
    <result property="sign" column="sign"/>
    <result property="createdate" column="createDate"/>

  </resultMap>
  <select id="selectAllPositions" resultMap="positionList">
    SELECT
        c.*
        FROM
        companyposition c
        WHERE
        c.sign='1'

  </select>


  <select id="SearchPositionName" resultMap="positionList" parameterType="java.lang.String">
    select c.*
from companyposition c
where c.positionName like #{id}

  </select>

</mapper>