<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingliang.recruit.mapper.CandidateMapper" >
  <resultMap id="BaseResultMap" type="com.mingliang.recruit.model.Candidate" >
    <id column="Candidate_Id" property="candidateId" jdbcType="VARCHAR" />
    <result column="Candidates_Password" property="candidatesPassword" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    Candidate_Id, Candidates_Password, sign, createdate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from candidate
    where Candidate_Id = #{candidateId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from candidate
    where Candidate_Id = #{candidateId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mingliang.recruit.model.Candidate" >
    insert into candidate (Candidate_Id, Candidates_Password, 
      sign, createdate)
    values (#{candidateId,jdbcType=VARCHAR}, #{candidatesPassword,jdbcType=VARCHAR}, 
      #{sign,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mingliang.recruit.model.Candidate" >
    insert into candidate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="candidateId != null" >
        Candidate_Id,
      </if>
      <if test="candidatesPassword != null" >
        Candidates_Password,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="candidateId != null" >
        #{candidateId,jdbcType=VARCHAR},
      </if>
      <if test="candidatesPassword != null" >
        #{candidatesPassword,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingliang.recruit.model.Candidate" >
    update candidate
    <set >
      <if test="candidatesPassword != null" >
        Candidates_Password = #{candidatesPassword,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Candidate_Id = #{candidateId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingliang.recruit.model.Candidate" >
    update candidate
    set Candidates_Password = #{candidatesPassword,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where Candidate_Id = #{candidateId,jdbcType=VARCHAR}
  </update>
  <select id="FindAllCandidates" resultMap="BaseResultMap" parameterType="java.lang.String">
    select c.*
from candidate c
where c.sign=#{id}
  </select>
  <select id="SearchList" resultMap="BaseResultMap" >
    SELECT *
from candidate
where candidate.Candidate_Id like #{arg0} and candidate.sign=#{arg1}
  </select>
</mapper>